.video-js .vjs-control-bar {
  display: none;
  position: absolute;
  bottom: $size-2;
  left: $size-2;
  right: $size-2;
  height: $size-8;
  padding: $size-1p5 $size-1p5 + $size-half;
  background: var(--color-transparent-overlay);
  border-radius: var(--shape-border-radius-base);
}

.video-js.is-sm:not(.vjs-fullscreen) .vjs-control-bar {
  bottom: 0;
  left: 0;
  right: 0;
  padding: $size-1 $size-1p5;
  height: $size-6;
  align-items: center;
}

// Video has started playing or we are in audioOnlyMode
.vjs-has-started .vjs-control-bar,
.vjs-audio-only-mode .vjs-control-bar {
  @include display-flex;
  visibility: visible;
  opacity: 1;

  $trans: visibility 0.1s, opacity 0.1s; // Var needed because of comma
  @include transition($trans);
}

// Video has started playing AND user is inactive
.vjs-has-started.vjs-user-inactive.vjs-playing .vjs-control-bar {
  // Remain visible for screen reader and keyboard users
  visibility: visible;
  opacity: 0;
  // prevent a click/tap from interacting with vjs-lock-showing menu's
  // or other controls while we are inactive/hidden
  pointer-events: none;

  $trans: visibility 1.0s, opacity 1.0s;
  @include transition($trans);

}

.vjs-controls-disabled .vjs-control-bar,
.vjs-using-native-controls .vjs-control-bar,
.vjs-error .vjs-control-bar {
  // !important is ok in this context.
  display: none !important;
}

// Don't hide the control bar if it's audio or in audioOnlyMode
.vjs-audio.vjs-has-started.vjs-user-inactive.vjs-playing .vjs-control-bar,
.vjs-audio-only-mode.vjs-has-started.vjs-user-inactive.vjs-playing .vjs-control-bar {
  opacity: 1;
  visibility: visible;
}

// no flex support
.vjs-has-started.vjs-no-flex .vjs-control-bar {
  display: table;
}
