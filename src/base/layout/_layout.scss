@use 'sass:math';

// -----------------------------------------------------------------------------
// LEGACY
// -----------------------------------------------------------------------------
// #region

// MAIN CONTAINERS V1
// #region


// #endregion

// #endregion

// -----------------------------------------------------------------------------
// CONTAINERS
// -----------------------------------------------------------------------------
// #region

%q-container {
  margin-right: auto;
  margin-left: auto;
  padding-left: var(--size-padding-x-container);
  padding-right: var(--size-padding-x-container);
  width: 100%;
}
%q-container-base {
  // we iterate over the map $container-max-widths: save the key to the variable
  // $breakpoint, and save the value to the variable $max-width
  @each $breakpoint, $max-width in $container-max-widths {
    @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
      max-width: calc(#{$max-width} + var(--size-padding-x-container) * 2);
    }
  }
}

.wrapper {
    @extend %q-container;
    min-height: 100vh;

  &:not(.home-wrapper, .live-video) {
    @include media-breakpoint-up(md) {
      display: grid;
      align-items: start;
      grid-column-gap: var(--size-gutter-xl);
      grid-row-gap: 2.4rem;
      grid-template-areas:
        'sidebar header'
        'sidebar main'
        'sidebar footer';
      grid-template-columns: 11.6rem 1fr;
      grid-template-rows: 12rem 1fr minmax(min-content, max-content);
      padding-left: 0;
    }

    @include media-breakpoint-up(xl) {
      grid-template-columns: clamp(27.2rem, #{percentage(math.div(1, 6))}, 32rem) 1fr;
    }
  }

  &.live-video {
      padding-left: 0;
      padding-right: 0;
    @include media-breakpoint-up(md) {
      display: grid;
      align-items: start;
      grid-template-areas:
        'sidebar main ';
      grid-row-gap: 0;
      grid-template-columns: 11.6rem 1fr;
    }

    @include media-breakpoint-up(lg) {
      grid-column-gap: var(--size-gutter-xl);
      grid-template-rows: 12rem 1fr minmax(min-content, max-content);
      grid-template-columns:  1fr  clamp(27.2rem, #{percentage(math.div(1, 6))}, 32rem);
      padding-left: var(--size-padding-x-container);
      grid-template-areas:
        'header sidebar '
        'main sidebar '
        'footer sidebar ';
    }
  }

}

.primary-nav {
  grid-area: sidebar;
}

.main {
  grid-area: main;
  background-color: var(--color-background-base);
  width: 100%;
  margin-top: 5rem;

  @include media-breakpoint-up(md) {
    margin-top: 0;
  }
}

.live-video {
  .main {
    margin-top: 0;
  }
}

.is_aside {
  .main {
    @include media-breakpoint-up(lg) {
      --gap: #{$size-3};
      display: grid;
      gap: var(--gap, 1.6rem);
      grid-template-columns: repeat(var(--columns, 12), 1fr);
      margin-right: auto;
      margin-left: auto;
    }    

    @include media-breakpoint-up(xl) {
      max-width: 100.8rem;

    }
  }
  .main__content {
    margin-bottom: 7.2rem;
    max-width: 100%;
    @include media-breakpoint-up(md) {
      margin-bottom: 0;
      grid-column: 1/span 8;
    }
  }  
}
.is_single {
  .main {
    @include media-breakpoint-up(lg) {
      display: grid;
      gap: var(--gap, 1.6rem);
      grid-template-columns: repeat(var(--columns, 12), 1fr);
      .main__content {
            grid-column: 3/span 8;
      }
    }
  }
}

.main__sidebar {
  display: none;
  @include media-breakpoint-up(lg) {
    display: block;
    grid-column: 9/span 4
  }

}
.footer {
  grid-area: footer;
}



// -----------------------------------------------------------------------------
// CSS GRID
// -----------------------------------------------------------------------------
// #region

// @see layout.md

@mixin grid() {
  display: grid;
  gap: var(--gap, #{$size-2});
  grid-template-columns: repeat(var(--columns, 12), 1fr);
  // grid-template-rows: repeat(var(--rows, 1), auto);
}
